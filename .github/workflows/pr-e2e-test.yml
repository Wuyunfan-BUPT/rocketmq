name: E2E test for pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["PR-CI"]
    types:
      - completed

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  DOCKER_REPO: wuyfeedocker/rocketm-ci
  TEST_REPO_NAME: apache/rocketmq-e2e

jobs:
  docker:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    timeout-minutes: 30
    strategy:
      matrix:
        base-image: ["ubuntu"]
        java-version: ["8"]
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifactRmq = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "rocketmq"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifactRmq.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/rocketmq.zip', Buffer.from(download.data));
      - run: |
          unzip rocketmq.zip
          mkdir rocketmq
          cp -r rocketmq-* rocketmq/
          ls
      - uses: actions/checkout@v3
        with:
          repository: apache/rocketmq-docker.git
          ref: master
          path: rocketmq-docker
      - name: docker-login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and save docker images
        id: build-images
        run: |
          cd rocketmq-docker/image-build-ci
          version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)
          mkdir versionlist
          touch versionlist/"${version}-`echo ${{ matrix.base-image }} | sed -e "s/:/-/g"`"
          sh ./build-image-local.sh ${version} ${{ matrix.base-image }} ${{ matrix.java-version }} ${DOCKER_REPO}
      - name: Show version
        id: show_versions
        run: |
          a=(`ls rocketmq-docker/image-build-ci/versionlist`)
          printf '%s\n' "${a[@]}" | jq -R . | jq -s .
          echo version-json=`printf '%s\n' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT

  deploy:
    # if: ${{ success() }}
    name: Deploy RocketMQ
    needs: [ docker ]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - name: echo name
        run: |
          echo "hello world"
      - uses: Wuyunfan-BUPT/test-tools@main
        name: Deploy rocketmq
        with:
          yamlString: |
            action: deploy
            namespace: rocketmq-${{ github.run_id }}-${{ strategy.job-index }}
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            waitTimes: 1200
            velaAppDescription: rocketmq-${{ env.GITHUB_WORKFLOW }}-${{ github.run_id }}@${{ matrix.version }}
            repoName: rocketmq
            helm:
              chart: ./rocketmq-k8s-helm
              git:
                branch: master
              repoType: git
              retries: 3
              url: https://ghproxy.com/https://github.com/apache/rocketmq-docker.git
              values:
                nameserver:
                  image:
                    repository: ${{env.DOCKER_REPO}}
                    tag: ${{ matrix.version }}
                broker:
                  image:
                    repository: ${{env.DOCKER_REPO}}
                    tag: ${{ matrix.version }}
                proxy:
                  image:
                    repository: ${{env.DOCKER_REPO}}
                    tag: ${{ matrix.version }}

  test-e2e-grpc-java:
    if: ${{ success() }}
    name: Test E2E grpc java
    needs: [docker, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@main
        name: e2e test
        with:
          yamlString: |
            action: test
            namespace: rocketmq-${{ github.run_id }}-0
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            API_VERSION: v1
            KIND: Pod
            RESTART_POLICY: Never
            ENV:
              REPO_NAME: ${{ env.TEST_REPO_NAME }}
              CODE: https://ghproxy.com/https://github.com/${{ env.TEST_REPO_NAME }}
              BRANCH: master
              CODE_PATH: java/e2e
              CMD: mvn -B test
              ALL_IP: null
            CONTAINER:
              IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4
              RESOURCE_LIMITS:
                cpu: 8
                memory: 8Gi
              RESOURCE_REQUIRE:
                cpu: 8
                memory: 8Gi
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-grpc-java-log-{{ matrix.version }}.txt
          path: testlog.txt
      - name: add markdown
        if: always()
        run: |
          cat result.md >> $GITHUB_STEP_SUMMARY

  test-e2e-golang:
    if: ${{ success() }}
    name: Test E2E golang
    needs: [docker, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@main
        name: e2e test
        with:
          yamlString: |
            action: test
            namespace: rocketmq-${{ github.run_id }}-0
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            API_VERSION: v1
            KIND: Pod
            RESTART_POLICY: Never
            ENV:
              REPO_NAME: ${{ env.TEST_REPO_NAME }}
              CODE: https://ghproxy.com/https://github.com/${{ env.TEST_REPO_NAME }}
              BRANCH: master
              CODE_PATH: golang 
              CMD: |
                cd ../common &&  mvn -Prelease -DskipTests clean package -U 
                cd ../rocketmq-admintools && source bin/env.sh 
                cd ../golang && go get -u github.com/apache/rocketmq-clients/golang && gotestsum --junitfile ./target/surefire-reports/TEST-report.xml ./mqgotest/... -timeout 2m  -v
              ALL_IP: null
            CONTAINER:
              IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4
              RESOURCE_LIMITS:
                cpu: 8
                memory: 8Gi
              RESOURCE_REQUIRE:
                cpu: 8
                memory: 8Gi
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-golang-log-{{ matrix.version }}.txt
          path: testlog.txt
      - name: add markdown
        if: always()
        run: |
          cat result.md >> $GITHUB_STEP_SUMMARY

  test-e2e-remoting-java:
    if: ${{ success() }}
    name: Test E2E remoting java
    needs: [ docker, deploy ]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@main
        name: e2e test
        with:
          yamlString: |
            action: test
            namespace: rocketmq-${{ github.run_id }}-0
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            API_VERSION: v1
            KIND: Pod
            RESTART_POLICY: Never
            ENV:
              REPO_NAME: ${{ env.TEST_REPO_NAME }}
              CODE: https://ghproxy.com/https://github.com/${{ env.TEST_REPO_NAME }}
              BRANCH: master
              CODE_PATH: java/e2e-v4
              CMD: mvn -B test
              ALL_IP: null
            CONTAINER:
              IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4
              RESOURCE_LIMITS:
                cpu: 8
                memory: 8Gi
              RESOURCE_REQUIRE:
                cpu: 8
                memory: 8Gi
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-remoting-java-log-{{ matrix.version }}.txt
          path: testlog.txt
      - name: add markdown
        if: always()
        run: |
          cat result.md >> $GITHUB_STEP_SUMMARY

  test-e2e-csharp:
    if: ${{ success() }}
    name: Test E2E csharp
    needs: [docker, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@main
        name: e2e test
        with:
          yamlString: |
            action: test
            namespace: rocketmq-${{ github.run_id }}-0
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            API_VERSION: v1
            KIND: Pod
            RESTART_POLICY: Never
            ENV:
              REPO_NAME: ${{ env.TEST_REPO_NAME }}
              CODE: https://ghproxy.com/https://github.com/${{ env.TEST_REPO_NAME }}
              BRANCH: master
              CODE_PATH: csharp
              CMD: |
                cd ../common &&  mvn -Prelease -DskipTests clean package -U
                cd ../rocketmq-admintools && source bin/env.sh
                cd ../csharp/rocketmq-client-csharp-tests/ && dotnet test --logger:"junit;LogFilePath=../target/surefire-reports/TEST-result.xml" -l "console;verbosity=detailed"
              ALL_IP: null
            CONTAINER:
              IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4
              RESOURCE_LIMITS:
                cpu: 8
                memory: 8Gi
              RESOURCE_REQUIRE:
                cpu: 8
                memory: 8Gi
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-csharp-log-{{ matrix.version }}.txt
          path: testlog.txt
      - name: add markdown
        if: always()
        run: |
          cat result.md >> $GITHUB_STEP_SUMMARY

  clean:
    if: always()
    name: Clean
    needs: [docker, test-e2e-grpc-java, test-e2e-golang, test-e2e-remoting-java]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@main
        name: clean
        with:
          yamlString: |
            action: clean
            namespace: rocketmq-${{ github.run_id }}-${{ strategy.job-index }}
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
